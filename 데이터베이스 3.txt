-- [ DML (Data Manipulation Language) ] : 데이터 조작어
-- 테이블에 새 행을 추가 
-- 테이블에 기존 행을 수정
-- 테이블에서 기존 행을 삭제

-- INSERT 구문 (행 삽입)
-- 1) 새 행 삽입
-- INSERT INTO 테이블명 VALUES (삽입할 데이터);

INSERT INTO DEPT
VALUES (50, 'A', 'B');

-- 2) NULL 값을 가진 행을 삽입
-- 암시적 : 열 리스트에서 열을 생략
INSERT INTO DEPT (DEPTNO, DNAME)
VALUES (60, 'C')

-- 명시적 : VALUES 절에서 NULL 키워드 지정
INSERT INTO DEPT
VALUES (70, 'D', NULL);

-- 3) 특수값 삽입 : 함수 사용 가능
INSERT INTO EMP (EMPNO, HIREDATE)
VALUES (9090, SYSDATE);

-- cf)
SELECT SYSDATE FROM DUAL
UNION ALL
SELECT CURRENT_DATE FROM DUAL;

-- SYSDATE : 시스템에서의 현재 시간을 반환
-- CURRENT_DATE : 현재 세션에서의 현재 시간을 반환

SQL> SELECT SESSIONTIMEZONE, CURRENT_DATE FROM DUAL;

ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MON-YYYY HH24:MI:SS';

ALTER SESSION SET TIME_ZONE = '-5:0';

SELECT SESSIONTIMEZONE, CURRENT_DATE FROM DUAL;

-- 4) 특정 날짜 및 시간 삽입 : 변환 함수
ALTER SESSION SET NLS_LANGUAGE = 'AMERICAN';

ALTER SESSION SET NLS_DATE_FORMAT = 'DD-MON-RR';

INSERT INTO EMP (EMPNO, HIREDATE)
VALUES (9091, SYSDATE);

INSERT INTO EMP (EMPNO, HIREDATE)
VALUES (9092, TO_DATE(SYSDATE, 'DD-MON-RR));

ALTER SESSION SET NLS_DATE_FORMAT = 'RR/MM/DD';

ALTER SESSION SET NLS_LANGUAGE = 'KOREAN';

DELETE FROM EMP WHERE EMPNO IN (9090, 9091, 9092);

-- 5) 스크립트 작성
-- : SQL 문에 &치환을 사용하여 값을 입력하도록 요구
-- : &치환 - &변수값에 대한 위치 표시자
INSERT INTO DEPT (DEPTNO, DNAME, LOC)
VALUES (&DEPTNO, '&DNAME', '&LOC');

-- 6) 다른 테이블에서 행 복사해서 삽입
INSERT INTO DEPT (DEPTNO)
 SELECT GRADE FROM SALGRADE
 WHERE GRADE = 1;

-- UPDATE 구문 (데이터 변경)
-- 1) 테이블 행 갱신
-- WHERE 절 無 : 모든 행 갱신
-- WHERE 절 有 : 특정 행 갱신

UPDATE DEPT 
SET DNAME = 'G'
WHERE DEPTNO = 60;

-- 2) 서브쿼리를 사용하여 여러 열 갱신 가능
-- : SET절에 서브쿼리를 여러 개 사용하여 동시에 여러 개의 컬럼값을 변경 가능
-- : 절대 동시에 여러개의 레코드를 갱신하는 것은 아님!

-- 7900 사원의 직책과 급여를 동시에 갱신 <- 7521 사원의 직책의 급여로 갱신
UPDATE EMP
SET JOB = (SELECT JOB
	FROM EMP
	WHERE EMPNO = 7521),
	SAL = (SELECT SAL
	FROM EMP
	WHERE EMPNO = 7521)
WHERE EMPNO = 7900;

-- 문제 : EMP 테이블에서 사번이 7499인 사원과 동일한 직책을 가진 사원들의 SAL 값을 
           7902 사원의 SAL 값으로 변경하시오
SQL> UPDATE EMP
  2  SET SAL = (SELECT SAL
  3     FROM EMP
  4     WHERE EMPNO = 7902)
  5  WHERE JOB = (SELECT JOB
  6     FROM EMP
  7     WHERE EMPNO = 7499);

ROLLBACK; - 데이터 백업

-- 3) 다른 테이블을 기반으로 행 갱신 : 서브쿼리 이용
CREATE TABLE COPY_EMP
AS 
SELECT * FROM EMP;

-- EMP 테이블 기반으로 하여 사원번호가 7934인 사원의 직책과 동일한 사원의 부서번호를 
   현재 7902 사원의 부서번호로 모두 변경한다.
UPDATE COPY_EMP
SET DEPTNO = (SELECT DEPTNO
	FROM EMP
	WHERE EMPNO = 7902)
WHERE JOB = (SELECT JOB
	FROM EMP
	WHERE EMPNO = 7934);

-- 문제 : EMP 테이블을 기반으로 사원번호가 7934인 사원의 매니저와 동일한 부서번호를 가지고 있는
           모든 사원의 부서번호를 현재(COPY_EMP 7902) 사원의 부서번호로 모두 변경하시오
SQL> UPDATE COPY_EMP
  2  SET DEPTNO = (SELECT DEPTNO
  3     FROM EMP
  4     WHERE EMPNO = 7902)
  5  WHERE DEPTNO = (SELECT DEPTNO
  6     FROM EMP
  7     WHERE EMPNO = (SELECT MGR
  8     FROM EMP
  9     WHERE EMPNO = 7934));

-- DELETE 구문 : 행 제거
-- 1) 테이블에서 행 삭제
-- WHERE 절 無 : 테이블 모든 행 삭제
-- WHERE 절 有 : 테이블에서 특정 행 삭제
DELETE FROM DEPT
WHERE DEPTNO = 50;

-- 예외적으로 DELETE 구문은 FROM 생략 가능
DELETE FROM DEPT
WHERE DEPTNO IN (60, 70);

-- 2) 다른 테이블을 기반으로 행 삭제 가능
DELETE FROM COPY_EMP
WHERE DEPTNO = (SELECT DEPTNO
	FROM DEPT
	WHERE DNAME = 'RESEARCH');

ROLLBACK;

-- cf) TRUNCATE 문 (DDL문)
-- : 테이블 구조는 그대로 남겨둔채 모든 행 제거
-- : 단! 롤백이 안되므로 조심해서 사용해야 함
-- 문법 : TRUNCATE TABLE 테이블명;


-----------------------------------------------------------------------------------------------------------
-- [ DDL (Date Definition Language) ] : 데이터 정의어

-- + 데이터베이스 주요 객체
-- 테이블 : 데이터를 저장
-- 뷰      : 하나 이상의 테이블에 있는 데이터의 부분 집합
-- 시퀀스 : 숫자 값을 생성
-- 인덱스 : 일부 질의 성능을 향상
-- 동의어 : 객체에 다른 이름을 부여

-- + 테이블 이름 지정 규칙
-- 1. A - Z, a - z, 0 - 9, _, $, # 사용 가능
-- 2. 첫글자 영문자
-- 3. 예약어 ( DB 에서 약속해 놓은 문자들 ) 사용 X
-- 4. 이름은 의미 있게 생성할 것

-- 1> 테이블 생성
-- : 테이블 생성하려면 유저(개발자)는 CREATE TABEL 권한이 있어야 하며 객체를 생성할 저장 영역이 있어야 함.
-- : DMA(데이터 베이스 관리자)는 DCL(데이터 제어문)문을 사용하여 유저에게 권한을 부여함

-- CREATE TABLE COPY_EMP2
-- (EMPNO NUMBER(4),      
-- ENAME VARCHAR(20),    ------> 최대 4000자 
--           cf) LONG 타입 : 2G 텍스트, LONG RAW : 2G 이미지, BFILE:4G
-- JOB CHAR(20),              ------> 최대 2000자
-- SAL NUMBER(7, 2)
-- HIREDATE DATE)


-- 테이블 생성 시 서브쿼리 사용 가능
CREATE TABLE EMPS
AS 
SELECT * FROM EMP;

-- 문제 : COPPY_EMP3 테이블 생성, 다만 이 테이블은 EMP테이블과 동일한 구조를 갖지만 데이터는 하나도 없는 테이블
SQL> CREATE TABLE COPY_EMP3
  2  AS
  3  SELECT * FROM EMP
  4  WHERE EMPNO = 9999;

-- INSERT 구문도 서브쿼리 사용 가능
SQL> INSERT INTO COPY_EMP3
  2  SELECT * FROM EMP;

-- 2> 테이블 구조 변경 : ALTER TABLE 구문
-- 테이블에 컬럼 추가
ALTER TABLE EMPS
ADD HP VARCHAR(10);

-- 테이블에 컬럼명 변경
ALTER TABLE EMPS
RENAME COLUMN HP TO MP;

-- 테이블 컬럼 정의 수정
ALTER TABLE EMPS
MODIFY MP VARCHAR2(15);

-- 테이블에 컬럼 삭제
ALTER TABLE EMPS
DROP COLUMN MP;

-- 읽기 전용 테이블
-- : READ ONLY 구문을 지정하여 테이블을 읽기 전용 모드로 둘 수 있음
-- : READ ONLY 모드이면 테이블에 영향을 주는 DML문 실행할 수 없음
-- : 테이블의 데이터를 수정하지 않는 한 DDL문 실행할 수 있음
ALTER TABLE EMPS READ ONLY;

-- 읽기 전용 모드 해제
ALTER TABLE EMPS READ WRITE;

-- 3> 테이블 삭제 : DROP TABLE 구문
DROP TABLE EMPS;

-- 테이블 복구(일종의 백업)
-- : DROP 하면 윈도우처럼 DBMS도 RECYCLE BIN(일종의 휴지통)으로 들어가게 됨

SHOW RECYCLEBIN;

FLASHBACK TABLE EMPS
TO BEFORE DROP;

-- 휴지통 비우기
PURGE RECYCLEBIN;

-- cf) DROP TABLE EMPS PURGE : 휴지통을 거치지 않고 바로 삭제 가능 (사용 시 주의 필요)
-- cf) DELETE 구문은 테이블의 ROW들을 지워주는 명령어
--     DROP구문은 테이블을 삭제하는 명령어
--     TRUNCATE구문은 테이블의 ROW들을 지워주는 명령어 - DELETE와 달리 ROLLBACK이 안되므로 더 빨리 삭제가 가능,
--     WHERE 절 사용 X => 부분 삭제가 안됨
-- cf) 읽기 전용 모드인 테이블을 삭제할 수 있음. DROP명령은 데이터 딕셔너리에서만 실행되므로
--     테이블 내용에 엑세스 할 필요가 없기 때문.

-- 4> 테이블 이름 변경
RENAME COPY_EMP2
TO EMPS;

-- 5> 테이블에 주석 달기
COMMENT ON TABLE EMPS
IS 'EMPLOYEE TABLE';

-- 주석은 Data Dictionary에서 확인할 수 있음
DESC USER_TAB_COMMENTS

SELECT * FROM  USER_TAB_COMMENTS;
 


