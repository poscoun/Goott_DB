-------------------------------------------------------------------------------       
       
--[서브쿼리]
--:SELECT문의 일종의 고급 기능
--:다른 SQL문의 WHERE절에서 서브쿼리를 작성하여 알 수 없는 조건부 값
--(프로그래머가 테이블에서 얻어오는 값을 예상할 수 없을 때)을 기반으로
--최종적으로 원하고자 하는 값을 구하고자 할 때 사용

--:SELECT문을 조건절에 넣어줄 수 있음-조건절에 들어가는 SELECT문을 SUBQUERY라고 부름.
--:최종적으로 인출하려는 값을 표기하는 부분: MAIN QUERY

--문제: JONES 사원보다 더 많은 급여를 받는 사원의 사번, 이름, 급여
--SELECT EMPNO, ENAME, SAL
--FROM EMP
--WHERE SAL > ????
--
--SELECT SAL
--FROM EMP
--WHERE ENAME = 'JONES'
--
--SELECT EMPNO,ENAME,SAL
--FROM EMP
--WHERE SAL > SELECT SAL
--            FROM EMP
--            WHERE ENAME = 'JONES'

--서브쿼리 인출값 하나면 SINGLE ROW SUBBQUERY
--        인출값 여러 개면 MULTIPLE ROW SUBQUERY
--        컬럼이 여러 개면 MULTIPLE COLUMN SUBQUERY

-->서브쿼리 사용 시 주의 사항
--1)서브쿼리는 반드시 괄호 안에다가 쓰기

SELECT SAL
FROM EMP
WHERE ENAME = 'JONES';

SELECT ENAME, SAL
FROM EMP
WHERE SAL > (SELECT SAL
             FROM EMP
            WHERE ENAME = 'JONES');
            
--2)SINGLE ROW SUBQUERY 앞에는 SINGLE ROW OPERATOR가 와야 합니다.
--:=,>=,<=,>,<,==,<>
SELECT ENAME, SAL
FROM EMP
WHERE SAL >= (SELECT SAL
             FROM EMP
            WHERE ENAME = 'JONES');
        
SELECT ENAME, SAL
FROM EMP
WHERE SAL > (SELECT SAL
             FROM EMP
             WHERE ENAME = 'JONES' OR COMM IS NOT NULL);
 
 --3)MULTIPLE ROW SUBQUERY 앞에는 MULTIPLE ROW OPERATOR(IN, ANY, ALL) 가 와야 한다.     
 --IN 연산자:여러 값 중 하나와 같다
 --10번 부서 사원들의 급여와 같은 급여를 받는 사원의 이름과 급여를 조회
 SELECT SAL
 FROM EMP
 WHERE DEPTNO = 10;
 
 SELECT ENAME, SAL
 FROM EMP
 WHERE SAL IN (2450, 5000,1300);
 
 SELECT ENAME, SAL
 FROM EMP
 WHERE SAL IN (SELECT SAL
                FROM EMP
                WHERE DEPTNO = 10);
                
--문제:부서번호가 10,20,30번 직원들의 부서번호별 평균 급여 중 하나와 같은 급여를 받는 
--사원의 사번, 이름, 급여 정보를 조회하세요
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL IN (SELECT TRUNC(AVG(SAL))
                FROM EMP
                WHERE DEPTNO IN(10,20,30)
                GROUP BY DEPTNO);
                
--문제:부서번호별로 가장 많은 급여를 받는 사원의 정보를 출력하세요
SELECT EMPNO, ENAME, DEPTNO, SAL
FROM EMP
WHERE SAL IN (SELECT MAX(SAL)
                FROM EMP
                GROUP BY DEPTNO);

--문제:다른 직원의 상관으로 근무하고 있는 직원의 사번, 이름, 급여를 조회하세요
SELECT MGR
FROM EMP;

SELECT EMPNO,ENAME,SAL
FROM EMP 
WHERE EMPNO IN (SELECT MGR
                FROM EMP);

--문제: 반대로 다른 직원의 상관이 아닌(부하직원이 없는) 직원들의 사번, 이름, 매니저번호를 조회하세요
SELECT EMPNO, ENAME, MGR
FROM EMP
WHERE EMPNO NOT IN (SELECT MGR
                    FROM EMP
                    WHERE MGR IS NOT NULL);

--ANY 연산자 : 여러 값 중 하나
--          : 비교연산자가 앞에 나와야 합니다
--          : 값 하나를 리스트의 값 또는 쿼리에서 반환되는 값과 각각 비교
--SALESMAN 직책의 급여보다 많이 받는 사원의 사원명과 급여 정보를 조회
SELECT SAL
FROM EMP
WHERE JOB = 'SALESMAN';

SELECT ENAME, SAL
FROM EMP
WHERE SAL > ANY(SELECT SAL
            FROM EMP
            WHERE JOB = 'SALESMAN');

--문제: 부서 번호가 10, 20, 30번인 직원들의 부서번호 별 평균 급여 중 하나보다 
--작거나 같은 급여를 받는 직원의 급여, 이름, 사번을 조회하세요
SELECT SAL, ENAME, EMPNO
FROM EMP
WHERE SAL <= ANY(SELECT AVG(SAL)
                 FROM EMP
                WHERE DEPTNO IN (10, 20, 30)
                 GROUP BY(DEPTNO));
            
--모든 SALESMAN의 급여보다 많이 받는 사원의 사원명과 급여 정보를 조회
SELECT ENAME, SAL
FROM EMP
WHERE SAL > ALL(SELECT SAL
                FROM EMP
                WHERE JOB='SALESMAN');
                
--문제: 부서 번호가 10, 20, 30번인 직원들의 부서번호 별 평균 급여 모두 보다 
--작은 급여를 받는 직원의 사번, 이름, 급여를 조회하세요
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL < ALL(SELECT TRUNC(AVG(SAL))
                FROM EMP
                WHERE DEPTNO IN (10,20,30)
                GROUP BY DEPTNO);

--4. 단일 행 서브쿼리 집합 함수 사용 가능
--EMP 테이블에서 부서별 평균 급여가 가장 큰 부서의 부서 번호와 그 평균 급여를 구하시오
SELECT DEPTNO, AVG(SAL)
FROM EMP
GROUP BY DEPTNO
HAVING AVG(SAL) = (SELECT MAX(AVG(SAL))
                    FROM EMP
                    GROUP BY DEPTNO);

--문제 : EMP 테이블에서 직책별 평균 급여가 가장 작은 직책과 그 평균 급여를 구하시오
SELECT JOB, AVG(SAL)
FROM EMP
GROUP BY JOB
HAVING AVG(SAL) = (SELECT MIN(AVG(SAL))
                    FROM EMP
                    GROUP BY JOB);
                    
--5.서브쿼리가 메인쿼리로 반환되는 행이 없으면
--(서브쿼리 조건을 만족하는 행이 없거나 또는 행이 있지만 해당 컬럼이 NULL 상태의 경우)
--메인쿼리의 결과는 항상 '선택된 행이 없음'이라는 메시지가 표시된다.
SELECT ENAME, JOB
FROM EMP
WHERE JOB = (SELECT JOB 
                FROM EMP
                WHERE EMPNO = 9999);

SELECT ENAME, JOB
FROM EMP
WHERE MGR = (SELECT MGR
                FROM EMP
                WHERE MGR IS NULL);

--만족하는 행이 있지만 NULL 상태인 경우는 추후 문제가 발생할 수 있으므로 문제점을 해결해야 함
--해결하는 하나의 방법으로 테이블에 데이터를 입력 시 컬럼을 NULL 상태로 두지 않고
--문자 데이터 유형인 경우는 '-' 값을, 숫자 데이터 유형이 ㄴ경우 0 값 같은 대체값을 미리 입력해 두면 최종 결과가 표시될 수 있음.

--다른 방법으로는 NULL 처리 함수를 이용하여 가능함
-- 이 방법은 데이터의 양이나 인덱스의 키 값 구성 방법에 따라 데이터베이스에 부하가 될 수도 있음에 유의

--6.EXISTS 연산자 : 테이블에 특정 행이 있는지 여부에 따라 쿼리 결과가 달라지는 쿼리에 사용하는 연산자
--: 서브쿼리 데이터가 존재하는가를 체크해 존재 여부(True/False)를 결과로 반환
--: 서브쿼리에서 결과 행을 찾으면, inner query 수행을 중단하고 True를 반환

--부서원이 없는 부서 정보를 조회
SELECT * 
FROM DEPT
WHERE EXISTS (SELECT *
                FROM EMP
                WHERE EMP.DEPTNO=DEPT.DEPTNO);
            
--사원 테이블을 통해 사원들이 속한 부서 번호의 정보를 조회
--결과: 추출하고자 하는 정보의 대상 테이블은 DEPT이지만 EMP 테이블과 조인하여 부서 번호를 체크해야 함
--      두 테이블의 관계는 1:N 관계이다. 그러므로 불필요하게 EMP 테이블을 모두 읽고 있는 상태
--      최종적으로는 중복 제거를 해서 올바른 결과를 얻어내고 있음
SELECT DISTINCT(D.DEPTNO), D.DNAME
FROM DEPT D, EMP E
WHERE D.DEPTNO = E.DEPTNO;

--EXISTS 연산자를 사용한 서브쿼리 질의문
--결과 : 추출하고자 하는 대상만을 FROM 절에 놓고 EMP 테이블은 체크만 하기 위해 EXISTS 절에 위치 시킨 상태
--      그러므로 전체 수행 속도는 대폭 감소
SELECT D.DEPTNO, D.DNAME
FROM DEPT D
WHERE EXISTS(SELECT 1
            FROM EMP E
            WHERE E.DEPTNO = D.DEPTNO);
            
--7. 서브쿼리문에는 ORDER BY 절을 지원하지 않는다.(에러 발생함)
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL > (SELECT SAL
                FROM EMP
                WHERE ENAME = 'JONES')
ORDER BY SAL DESC;

-----------------------------------------------------------------------------
--<   SUBQUERY   실습문제  >

--1.  SMITH 보다 월급을  많이 받는 사원들의 이름과 월급을 출력하라
SELECT ENAME, SAL
FROM EMP
WHERE SAL >    ( SELECT SAL 
                FROM EMP
                WHERE ENAME='SMITH');

--2.  10 번 부서의 사원들과 같은 월급을 받는 사원들의 이름과 월급과 부서 번호를 출력하라 
SELECT ENAME, SAL, DEPTNO
FROM EMP
WHERE SAL IN (SELECT SAL
                FROM EMP
                WHERE DEPTNO=10);


--3. BLAKE 와 같은 부서에 있는 사람들의 이름과 입사일을 출력하되  BLAKE는 제외
SELECT ENAME, HIREDATE
FROM EMP
WHERE DEPTNO IN (SELECT DEPTNO
                FROM EMP
                WHERE ENAME='BLAKE')
AND ENAME!='BLAKE'; 

--4. 평균 급여보다 많은 급여를 받는 사원들의 사번, 이름, 월급을 나타내되 월급이 높은 사람 순으로  출력하라
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL> ALL(SELECT AVG(SAL)
                FROM EMP)
ORDER BY SAL DESC;

--5. 이름에  T  를 포함하고 있는 사원들과  동일한 부서에서 근무하고 있는 사원의 사원 번호와 이름을  출력하라
SELECT EMPNO, ENAME
FROM EMP
WHERE DEPTNO IN (SELECT DEPTNO
                    FROM EMP
                    WHERE ENAME LIKE '%T%');

--6. 30번 부서의 최고 급여를 받는 사원 보다도 더 많은 급여를 받는 전체 사원들을 출력하라
SELECT *
FROM EMP
WHERE SAL>ANY(SELECT MAX(SAL)
            FROM EMP
            WHERE DEPTNO = 30);

--7. 부서 위치가 DALLAS 인  모든 사원의 이름, 부서 번호 및 직업을 출력하라
SELECT ENAME, DEPTNO, JOB
FROM EMP
WHERE DEPTNO = (SELECT DEPTNO
            FROM DEPT
            WHERE LOC ='DALLAS');

--8.  SALES  부서의 모든 사원에 대한 부서번호, 이름 및 직업을 출력하라 
SELECT DEPTNO, ENAME, JOB
FROM EMP
WHERE DEPTNO =  (SELECT DEPTNO
                    FROM DEPT
                    WHERE DNAME='SALES');

--9.  KING 에게  보고 하는 모든 사원의 이름과 급여를 출력하라  (즉 직속상사가 KING인 사원)
SELECT ENAME, SAL
    FROM EMP
    WHERE MGR = (SELECT EMPNO
       FROM EMP
       WHERE ENAME= 'KING');

--10.  자신의  급여가 사원 평균 급여보다 많으면서  이름에 S자 들어가는  사원과
--     동일 부서인  모든  사원의 사원번호, 이름  및 급여를 출력하라
SELECT EMPNO, ENAME, SAL
FROM EMP
WHERE SAL>ANY(SELECT AVG(SAL)
                FROM EMP
                WHERE ENAME LIKE '%S%'); 