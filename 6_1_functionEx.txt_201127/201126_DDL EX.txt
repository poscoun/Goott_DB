201126 DDLEX

--[DDL(Data Definition Language)]: 데이터 

-- + 데이터베이스 주요 객체
--테이블 : 데이터를 저장
--뷰 : 하나 이상의 테이블에 있는 데이터의 부분 집합
--시퀀스 : 숫자 값을 생성
--인덱스 : 일부 질의 성능을 향상
--동의어 : 객체에 다른 이름을 부여

-- + 테이블 이름 지정 규칙
-- 1. A-Z, a-z, 0-9,_,$,# 사용 가능
-- 2. 첫글자 영문자
-- 3. 예약어(DB에서 약속해 놓은 문자들)
-- 4. 이름은 의미 있게 생성할 것

-- 1>테이블 생성
-- :테이블 생성하려면 유저(개발자)는 CREATE TABLE 권한이 있어야 하며 객체를 생성할 저장 영역이 있어야 함.
-- :DBA(데이터 베이스 관리자)는 DCL(데이터 제어문)문을 사용하여 유저에게 권한을 부여함

--CREATE TABLE COPY_EMP2
--(EMPNO NUMBER(4),
--ENAME VARCHAR(20),
--      cf)LONG 타입: 2G 텍스트, LONG RAW:2G 이미지
--       =>LOB, CLOB, BLOB, BFILE:4G
--JOB CHAR(20),              --->최대 2000자
--SAL NUMBER(7,2),
--HIREDATE DATE)

CREATE TABLE COPY_EMP2
(EMPNO NUMBER(4),
ENAME VARCHAR(20),
JOB CHAR(20),              --->최대 2000자
SAL NUMBER(7,2),
HIREDATE DATE);

DESC COPY_EMP2

CREATE TABLE BIGDATA1
(D1 LONG, D2 LONG RAW);

CREATE TABLE BIGDATA2
(D1 CLOB, D2 BLOB, D3 BFILE);

DESC BIGDATA2

--테이블 생성 시 서브쿼리 사용 가능
CREATE TABLE EMPS
AS
SELECT * FROM EMP;

SELECT * FROM EMPS;

--문제: COPY_EMP3 테이블 생성
--     다만 이 테이블은 EMP테이블과 동일한 구조를 갖지만 데이터는 하나도 없는 테이블
CREATE TABLE COPY_EMP3
AS
SELECT * FROM EMP
WHERE EMPNO = 9999;

SELECT * FROM COPY_EMP3;

--INSERT 구문도 서브쿼리 사용 가능
INSERT INTO COPY_EMP3
SELECT * FROM EMP;

SELECT * FROM COPY_EMP3;

--2> 테이블 구조 변경 : ALTER TABLE 구문
--테이블에 컬럼 추가
DESC EMPS

ALTER TABLE EMPS
ADD HP VARCHAR(10);

SELECT * FROM EMPS;

--테이블에 컬럼명 변경
ALTER TABLE EMPS
RENAME COLUMN HP TO MP;

SELECT * FROM EMPS;

--테이블 컬럼 정의 수정
ALTER TABLE EMPS
MODIFY MP VARCHAR2(15);

DESC EMPS;

--테이블에 컬럼 삭제
ALTER TABLE EMPS
DROP COLUMN MP;

SELECT * FROM EMPS;

--읽기 전용 테이블
--:READ ONLY 구문을 지정하여 테이블을 읽기 전용 모드로 둘 수 있음
--:READ ONLY 모드이면 테이블에 영향을 주는 DML문 실행할 수 없음
--:테이블의 데이터를 수정하지 않는 한 DDL문 실행할 수 있음

ALTER TABLE EMPS READ ONLY;

SELECT * FROM EMPS;

INSERT INTO EMPS(EMPNO)
VALUES (9999);

--읽기 전용 모드 해제
ALTER TABLE EMPS READ WRITE;

--3>테이블 삭제: DROP TABLE 구문
DROP TABLE EMPS;

DESC EMPS


--테이블 복구(일종의 백업)
--: DROP하면 윈도우처럼 DBMS도 RECYCLE BIN(일종의 휴지통)으로 들어가게 됨'

SHOW RECYCLEBIN;

FLASHBACK TABLE EMPS
TO BEFORE DROP;

DESC EMPS;

DROP TABLE EMPS;

SHOW RECYCLEBIN;

--휴지통 비우기
PURGE RECYCLEBIN;

SHOW RECYCLEBIN;

DESC EMPS
--cf) DROP TABLE EMPS PURGE: 휴지통을 거치지 않고 바로 삭제 가능(사용 시 주의 비용)
--cf) DELETE구문은 테이블의 ROW들을 지워주는 명령어
--    DROP 구문은 테이블을 삭제하는 명령어
--    TRUCATE구문은 테이블의 ROW들을 지워주는 명령어-DELETE와 달리 ROLLBACK이 안 도므로 더 빨리 삭제가 가능.
--    WHERE 절 사용 X => 부분 삭제가 안됨
--    cf) 읽기 전용 모드인 테이블을 삭제할 수 있음. DROP 명령은 데이터 딕셔너리에서만 실행되므로 
--        테이블 내용에 액세스 할 필요가 없기 때문.

--4>테이블 이름 변경
RENAME COPY_EMP2
TO EMPS;

SELECT * FROM EMPS;

--5>테이블에 주석 달기
COMMENT ON TABLE EMPS
IS 'EMPLOYEE TABLE';

SELECT * FROM EMPS;

DESC EMPS;

--주석은 Data Dictionary에서 확인할 수 있음
DESC USER_TAB_COMMENTS;

SELECT * FROM USER_TAB_COMMENTS ;
----------------------------------------------------------------------------------
--[ DDL 실습]
--그림1)
--SQL> desc cust
--Name                                      Null?    Type
------------------------------------------   -------
--CUST_ID                                           NUMBER(6)
--CUST_GENDER                                        NUMBER
--CUST_NAME                                          VARCHAR2(10)

--그림2)
--SQL> select * from cust;
--CUST_ID   CUST_GENDER    CUST_NAME
---------     -------------     -----------
--         1           1        홍길동
--         2           0        유관순
--         3           1
--         4           0        신사임당
--         5           1        갑돌이

--1.      그림1처럼 TABLE을 생성 하는 SQL문을 작성하시오.
DROP TABLE CUST;

CREATE TABLE CUST
(CUST_ID NUMBER(6),
CUST_GENDER NUMBER,
CUST_NAME VARCHAR2(20));

DESC CUST;

--2.      그림2처럼 데이터를 추가 하는 SQL문을 작성하시오.
INSERT INTO CUST
VALUES (1, 1, '홍길동');
INSERT INTO CUST
VALUES (2, 0, '유관순');
INSERT INTO CUST
VALUES (3, 1, 'NULL');
INSERT INTO CUST
VALUES (4, 0, '신사임당');
INSERT INTO CUST
VALUES (5, 1, '갑돌이');

SELECT * FROM CUST;

--3. CUST 테이블에 CUST_GRADE 컬럼을 추가 하는 SQL문을 작성하시오
--(단 GRADE 는 숫자2자리)
ALTER TABLE CUST
ADD CUST_GRADE NUMBER(2);

SELECT * FROM CUST;

--4. CUST_GRADE 컬럼에 TYPE을 숫자 4자리로 변경 시키는 SQL문을 작성하시오
ALTER TABLE CUST
MODIFY CUST_GRADE NUMBER(4);

--5.      CUST 테이블을 복사하여 CUSTOMER 테이블을 생성


 

--6.    CUST 테이블에  고객테이블 이라는 주석을 달고   올바르게  추가되었는지 데이터 딕셔너리를 조회하세요



--7.   CUST 테이블의 모든 데이터를 삭제 하는 2가지 방법의 명령을 쓰고 둘의 차이점에 대해 기술하시요


--8.  CUST 테이블을 삭제



--9.  휴지통에서 삭제된 테이블의 정보를 찾을수 있다.



--10. 삭제하기 전으로 되돌리려고 한다 어떻게 해야 하나?



